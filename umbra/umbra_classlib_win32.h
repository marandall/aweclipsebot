#pragma once

#include "umbra_remoteclass.h"
#include "umbra_classlib.h"

// UMBRA_NAMESPACE: Win32
namespace Umbra { namespace ClassLib { namespace Win32 { 

	class MessageBox : public Umbra::RemoteClass
	{		
	public: // umbra interfaces
		bool doUmbraProperty(Umbra::Variant& V, Umbra::PropertyRequest& R) 
		{ 
			UMBRA_PROPERTY_C(OK, MB_OK);
			UMBRA_PROPERTY_C(CANCEL, MB_OKCANCEL);
			UMBRA_PROPERTY_C(ABORT_RETRY_IGNORE, MB_ABORTRETRYIGNORE);
			UMBRA_PROPERTY_C(YES_NO_CANCEL, MB_YESNOCANCEL);
			UMBRA_PROPERTY_C(YES_NO, MB_YESNO);
			UMBRA_PROPERTY_C(RETRY_CANCEL, MB_RETRYCANCEL);
			UMBRA_PROPERTY_C(ICON_HAND, MB_ICONHAND);
			UMBRA_PROPERTY_C(ICON_QUESTION, MB_ICONQUESTION);
			UMBRA_PROPERTY_C(ICON_EXCLAMATION, MB_ICONEXCLAMATION);
			UMBRA_PROPERTY_C(ICON_ASTERISK, MB_ICONASTERISK);
			UMBRA_PROPERTY_C(ICON_USER, MB_USERICON);
			UMBRA_PROPERTY_C(ICON_WARNING, MB_ICONWARNING);
			UMBRA_PROPERTY_C(ICON_ERROR, MB_ICONERROR);
			UMBRA_PROPERTY_C(ICON_INFORMATION, MB_ICONINFORMATION);
			UMBRA_PROPERTY_C(ICON_STOP, MB_ICONSTOP);
			UMBRA_PROPERTY_C(BUTTON_1, MB_DEFBUTTON1);
			UMBRA_PROPERTY_C(BUTTON_2, MB_DEFBUTTON2);
			UMBRA_PROPERTY_C(BUTTON_3, MB_DEFBUTTON3);
			UMBRA_PROPERTY_C(APP_MODAL, MB_APPLMODAL);
			UMBRA_PROPERTY_C(SYSTEM_MODAL, MB_SYSTEMMODAL);
			UMBRA_PROPERTY_C(TASK_MODAL, MB_TASKMODAL);
			
			// unsupported element
			return Umbra::PropertyRequest::NOT_HANDLED; 
		}
	};

	class VirtualKeys : public Umbra::RemoteClass
	{		
	public: // umbra interfaces
		bool doUmbraProperty(Umbra::Variant& V, Umbra::PropertyRequest& R) 
		{ 
#ifdef VK_BACK // virtual keys must be available
			UMBRA_PROPERTY_C(BACK, VK_BACK);
			UMBRA_PROPERTY_C(TAB, VK_TAB);
			UMBRA_PROPERTY_C(CLEAR, VK_CLEAR);
			UMBRA_PROPERTY_C(RETURN, VK_RETURN);
			UMBRA_PROPERTY_C(SHIFT, VK_SHIFT);
			UMBRA_PROPERTY_C(CONTROL, VK_CONTROL);
			UMBRA_PROPERTY_C(MENU, VK_MENU);
			UMBRA_PROPERTY_C(PAUSE, VK_PAUSE);
			UMBRA_PROPERTY_C(CAPITAL, VK_CAPITAL);
			UMBRA_PROPERTY_C(KANA, VK_KANA);
			UMBRA_PROPERTY_C(HANGEUL, VK_HANGEUL);
			UMBRA_PROPERTY_C(HANGUL, VK_HANGUL);
			UMBRA_PROPERTY_C(JUNJA, VK_JUNJA);
			UMBRA_PROPERTY_C(FINAL, VK_FINAL);
			UMBRA_PROPERTY_C(HANJA, VK_HANJA);
			UMBRA_PROPERTY_C(KANJI, VK_KANJI);
			UMBRA_PROPERTY_C(ESCAPE, VK_ESCAPE);
			UMBRA_PROPERTY_C(CONVERT, VK_CONVERT);
			UMBRA_PROPERTY_C(NONCONVERT, VK_NONCONVERT);
			UMBRA_PROPERTY_C(ACCEPT, VK_ACCEPT);
			UMBRA_PROPERTY_C(MODECHANGE, VK_MODECHANGE);
			UMBRA_PROPERTY_C(SPACE, VK_SPACE);
			UMBRA_PROPERTY_C(PRIOR, VK_PRIOR);
			UMBRA_PROPERTY_C(NEXT, VK_NEXT);
			UMBRA_PROPERTY_C(END, VK_END);
			UMBRA_PROPERTY_C(HOME, VK_HOME);
			UMBRA_PROPERTY_C(LEFT, VK_LEFT);
			UMBRA_PROPERTY_C(UP, VK_UP);
			UMBRA_PROPERTY_C(RIGHT, VK_RIGHT);
			UMBRA_PROPERTY_C(DOWN, VK_DOWN);
			UMBRA_PROPERTY_C(SELECT, VK_SELECT);
			UMBRA_PROPERTY_C(PRINT, VK_PRINT);
			UMBRA_PROPERTY_C(EXECUTE, VK_EXECUTE);
			UMBRA_PROPERTY_C(SNAPSHOT, VK_SNAPSHOT);
			UMBRA_PROPERTY_C(INSERT, VK_INSERT);
			UMBRA_PROPERTY_C(DELETE, VK_DELETE);
			UMBRA_PROPERTY_C(HELP, VK_HELP);
			UMBRA_PROPERTY_C(LWIN, VK_LWIN);
			UMBRA_PROPERTY_C(RWIN, VK_RWIN);
			UMBRA_PROPERTY_C(APPS, VK_APPS);
			UMBRA_PROPERTY_C(SLEEP, VK_SLEEP);
			UMBRA_PROPERTY_C(NUMPAD0, VK_NUMPAD0);
			UMBRA_PROPERTY_C(NUMPAD1, VK_NUMPAD1);
			UMBRA_PROPERTY_C(NUMPAD2, VK_NUMPAD2);
			UMBRA_PROPERTY_C(NUMPAD3, VK_NUMPAD3);
			UMBRA_PROPERTY_C(NUMPAD4, VK_NUMPAD4);
			UMBRA_PROPERTY_C(NUMPAD5, VK_NUMPAD5);
			UMBRA_PROPERTY_C(NUMPAD6, VK_NUMPAD6);
			UMBRA_PROPERTY_C(NUMPAD7, VK_NUMPAD7);
			UMBRA_PROPERTY_C(NUMPAD8, VK_NUMPAD8);
			UMBRA_PROPERTY_C(NUMPAD9, VK_NUMPAD9);
			UMBRA_PROPERTY_C(MULTIPLY, VK_MULTIPLY);
			UMBRA_PROPERTY_C(ADD, VK_ADD);
			UMBRA_PROPERTY_C(SEPARATOR, VK_SEPARATOR);
			UMBRA_PROPERTY_C(SUBTRACT, VK_SUBTRACT);
			UMBRA_PROPERTY_C(DECIMAL, VK_DECIMAL);
			UMBRA_PROPERTY_C(DIVIDE, VK_DIVIDE);
			UMBRA_PROPERTY_C(F1, VK_F1);
			UMBRA_PROPERTY_C(F2, VK_F2);
			UMBRA_PROPERTY_C(F3, VK_F3);
			UMBRA_PROPERTY_C(F4, VK_F4);
			UMBRA_PROPERTY_C(F5, VK_F5);
			UMBRA_PROPERTY_C(F6, VK_F6);
			UMBRA_PROPERTY_C(F7, VK_F7);
			UMBRA_PROPERTY_C(F8, VK_F8);
			UMBRA_PROPERTY_C(F9, VK_F9);
			UMBRA_PROPERTY_C(F10, VK_F10);
			UMBRA_PROPERTY_C(F11, VK_F11);
			UMBRA_PROPERTY_C(F12, VK_F12);
			UMBRA_PROPERTY_C(F13, VK_F13);
			UMBRA_PROPERTY_C(F14, VK_F14);
			UMBRA_PROPERTY_C(F15, VK_F15);
			UMBRA_PROPERTY_C(F16, VK_F16);
			UMBRA_PROPERTY_C(F17, VK_F17);
			UMBRA_PROPERTY_C(F18, VK_F18);
			UMBRA_PROPERTY_C(F19, VK_F19);
			UMBRA_PROPERTY_C(F20, VK_F20);
			UMBRA_PROPERTY_C(F21, VK_F21);
			UMBRA_PROPERTY_C(F22, VK_F22);
			UMBRA_PROPERTY_C(F23, VK_F23);
			UMBRA_PROPERTY_C(F24, VK_F24);
			UMBRA_PROPERTY_C(NUMLOCK, VK_NUMLOCK);
			UMBRA_PROPERTY_C(SCROLL, VK_SCROLL);

			// extended virtual keys
			UMBRA_PROPERTY_C(LSHIFT, VK_LSHIFT);
			UMBRA_PROPERTY_C(RSHIFT, VK_RSHIFT);
			UMBRA_PROPERTY_C(LCONTROL, VK_LCONTROL);
			UMBRA_PROPERTY_C(RCONTROL, VK_RCONTROL);
			UMBRA_PROPERTY_C(LMENU, VK_LMENU);
			UMBRA_PROPERTY_C(RMENU, VK_RMENU);
			UMBRA_PROPERTY_C(BROWSER_BACK, VK_BROWSER_BACK);
			UMBRA_PROPERTY_C(BROWSER_FORWARD, VK_BROWSER_FORWARD);
			UMBRA_PROPERTY_C(BROWSER_REFRESH, VK_BROWSER_REFRESH);
			UMBRA_PROPERTY_C(BROWSER_STOP, VK_BROWSER_STOP);
			UMBRA_PROPERTY_C(BROWSER_SEARCH, VK_BROWSER_SEARCH);
			UMBRA_PROPERTY_C(BROWSER_FAVORITES, VK_BROWSER_FAVORITES);
			UMBRA_PROPERTY_C(BROWSER_HOME, VK_BROWSER_HOME);
			UMBRA_PROPERTY_C(VOLUME_MUTE, VK_VOLUME_MUTE);
			UMBRA_PROPERTY_C(VOLUME_DOWN, VK_VOLUME_DOWN);
			UMBRA_PROPERTY_C(VOLUME_UP, VK_VOLUME_UP);
			UMBRA_PROPERTY_C(MEDIA_NEXT_TRACK, VK_MEDIA_NEXT_TRACK);
			UMBRA_PROPERTY_C(MEDIA_PREV_TRACK, VK_MEDIA_PREV_TRACK);
			UMBRA_PROPERTY_C(MEDIA_STOP, VK_MEDIA_STOP);
			UMBRA_PROPERTY_C(MEDIA_PLAY_PAUSE, VK_MEDIA_PLAY_PAUSE);
			UMBRA_PROPERTY_C(LAUNCH_MAIL, VK_LAUNCH_MAIL);
			UMBRA_PROPERTY_C(LAUNCH_MEDIA_SELECT, VK_LAUNCH_MEDIA_SELECT);
			UMBRA_PROPERTY_C(LAUNCH_APP1, VK_LAUNCH_APP1);
			UMBRA_PROPERTY_C(LAUNCH_APP2, VK_LAUNCH_APP2);
			UMBRA_PROPERTY_C(OEM_1, VK_OEM_1);
			UMBRA_PROPERTY_C(OEM_PLUS, VK_OEM_PLUS);
			UMBRA_PROPERTY_C(OEM_COMMA, VK_OEM_COMMA);
			UMBRA_PROPERTY_C(OEM_MINUS, VK_OEM_MINUS);
			UMBRA_PROPERTY_C(OEM_PERIOD, VK_OEM_PERIOD);
			UMBRA_PROPERTY_C(OEM_2, VK_OEM_2);
			UMBRA_PROPERTY_C(OEM_3, VK_OEM_3);
			UMBRA_PROPERTY_C(OEM_4, VK_OEM_4);
			UMBRA_PROPERTY_C(OEM_5, VK_OEM_5);
			UMBRA_PROPERTY_C(OEM_6, VK_OEM_6);
			UMBRA_PROPERTY_C(OEM_7, VK_OEM_7);
			UMBRA_PROPERTY_C(OEM_8, VK_OEM_8);
			UMBRA_PROPERTY_C(OEM_AX, VK_OEM_AX);
			UMBRA_PROPERTY_C(OEM_102, VK_OEM_102);
			UMBRA_PROPERTY_C(ICO_HELP, VK_ICO_HELP);
			UMBRA_PROPERTY_C(ICO_00, VK_ICO_00);
			UMBRA_PROPERTY_C(PROCESSKEY, VK_PROCESSKEY);
			UMBRA_PROPERTY_C(ICO_CLEAR, VK_ICO_CLEAR);
			UMBRA_PROPERTY_C(PACKET, VK_PACKET);
			UMBRA_PROPERTY_C(OEM_RESET, VK_OEM_RESET);
			UMBRA_PROPERTY_C(OEM_JUMP, VK_OEM_JUMP);
			UMBRA_PROPERTY_C(OEM_PA1, VK_OEM_PA1);
			UMBRA_PROPERTY_C(OEM_PA2, VK_OEM_PA2);
			UMBRA_PROPERTY_C(OEM_PA3, VK_OEM_PA3);
			UMBRA_PROPERTY_C(OEM_WSCTRL, VK_OEM_WSCTRL);
			UMBRA_PROPERTY_C(OEM_CUSEL, VK_OEM_CUSEL);
			UMBRA_PROPERTY_C(OEM_ATTN, VK_OEM_ATTN);
			UMBRA_PROPERTY_C(OEM_FINISH, VK_OEM_FINISH);
			UMBRA_PROPERTY_C(OEM_COPY, VK_OEM_COPY);
			UMBRA_PROPERTY_C(OEM_AUTO, VK_OEM_AUTO);
			UMBRA_PROPERTY_C(OEM_ENLW, VK_OEM_ENLW);
			UMBRA_PROPERTY_C(OEM_BACKTAB, VK_OEM_BACKTAB);
			UMBRA_PROPERTY_C(ATTN, VK_ATTN);
			UMBRA_PROPERTY_C(CRSEL, VK_CRSEL);
			UMBRA_PROPERTY_C(EXSEL, VK_EXSEL);
			UMBRA_PROPERTY_C(EREOF, VK_EREOF);
			UMBRA_PROPERTY_C(PLAY, VK_PLAY);
			UMBRA_PROPERTY_C(ZOOM, VK_ZOOM);
			UMBRA_PROPERTY_C(NONAME, VK_NONAME);
			UMBRA_PROPERTY_C(PA1, VK_PA1);
			UMBRA_PROPERTY_C(OEM_CLEAR, VK_OEM_CLEAR);
#endif // VK_BACK

			// unsupported element
			return Umbra::PropertyRequest::NOT_HANDLED; 
		}
	};

	class SystemMetrics: public Umbra::RemoteClass
	{		
	public: // umbra interfaces
		bool doUmbraProperty(Umbra::Variant& V, Umbra::PropertyRequest& R) 
		{ 
#ifdef SM_CXSCREEN
			UMBRA_PROPERTY_C(CXSCREEN, SM_CXSCREEN);
			UMBRA_PROPERTY_C(CYSCREEN, SM_CYSCREEN);
			UMBRA_PROPERTY_C(CXVSCROLL, SM_CXVSCROLL);
			UMBRA_PROPERTY_C(CYHSCROLL, SM_CYHSCROLL);
			UMBRA_PROPERTY_C(CYCAPTION, SM_CYCAPTION);
			UMBRA_PROPERTY_C(CXBORDER, SM_CXBORDER);
			UMBRA_PROPERTY_C(CYBORDER, SM_CYBORDER);
			UMBRA_PROPERTY_C(CXDLGFRAME, SM_CXDLGFRAME);
			UMBRA_PROPERTY_C(CYDLGFRAME, SM_CYDLGFRAME);
			UMBRA_PROPERTY_C(CYVTHUMB, SM_CYVTHUMB);
			UMBRA_PROPERTY_C(CXHTHUMB, SM_CXHTHUMB);
			UMBRA_PROPERTY_C(CXICON, SM_CXICON);
			UMBRA_PROPERTY_C(CYICON, SM_CYICON);
			UMBRA_PROPERTY_C(CXCURSOR, SM_CXCURSOR);
			UMBRA_PROPERTY_C(CYCURSOR, SM_CYCURSOR);
			UMBRA_PROPERTY_C(CYMENU, SM_CYMENU);
			UMBRA_PROPERTY_C(CXFULLSCREEN, SM_CXFULLSCREEN);
			UMBRA_PROPERTY_C(CYFULLSCREEN, SM_CYFULLSCREEN);
			UMBRA_PROPERTY_C(CYKANJIWINDOW, SM_CYKANJIWINDOW);
			UMBRA_PROPERTY_C(MOUSEPRESENT, SM_MOUSEPRESENT);
			UMBRA_PROPERTY_C(CYVSCROLL, SM_CYVSCROLL);
			UMBRA_PROPERTY_C(CXHSCROLL, SM_CXHSCROLL);
			UMBRA_PROPERTY_C(DEBUG, SM_DEBUG);
			UMBRA_PROPERTY_C(SWAPBUTTON, SM_SWAPBUTTON);
			UMBRA_PROPERTY_C(RESERVED1, SM_RESERVED1);
			UMBRA_PROPERTY_C(RESERVED2, SM_RESERVED2);
			UMBRA_PROPERTY_C(RESERVED3, SM_RESERVED3);
			UMBRA_PROPERTY_C(RESERVED4, SM_RESERVED4);
			UMBRA_PROPERTY_C(CXMIN, SM_CXMIN);
			UMBRA_PROPERTY_C(CYMIN, SM_CYMIN);
			UMBRA_PROPERTY_C(CXSIZE, SM_CXSIZE);
			UMBRA_PROPERTY_C(CYSIZE, SM_CYSIZE);
			UMBRA_PROPERTY_C(CXFRAME, SM_CXFRAME);
			UMBRA_PROPERTY_C(CYFRAME, SM_CYFRAME);
			UMBRA_PROPERTY_C(CXMINTRACK, SM_CXMINTRACK);
			UMBRA_PROPERTY_C(CYMINTRACK, SM_CYMINTRACK);
			UMBRA_PROPERTY_C(CXDOUBLECLK, SM_CXDOUBLECLK);
			UMBRA_PROPERTY_C(CYDOUBLECLK, SM_CYDOUBLECLK);
			UMBRA_PROPERTY_C(CXICONSPACING, SM_CXICONSPACING);
			UMBRA_PROPERTY_C(CYICONSPACING, SM_CYICONSPACING);
			UMBRA_PROPERTY_C(MENUDROPALIGNMENT, SM_MENUDROPALIGNMENT);
			UMBRA_PROPERTY_C(PENWINDOWS, SM_PENWINDOWS);
			UMBRA_PROPERTY_C(DBCSENABLED, SM_DBCSENABLED);
			UMBRA_PROPERTY_C(CMOUSEBUTTONS, SM_CMOUSEBUTTONS);
			UMBRA_PROPERTY_C(CXFIXEDFRAME, SM_CXFIXEDFRAME);
			UMBRA_PROPERTY_C(CYFIXEDFRAME, SM_CYFIXEDFRAME);
			UMBRA_PROPERTY_C(CXSIZEFRAME, SM_CXSIZEFRAME);
			UMBRA_PROPERTY_C(CYSIZEFRAME, SM_CYSIZEFRAME);
			UMBRA_PROPERTY_C(SECURE, SM_SECURE);
			UMBRA_PROPERTY_C(CXEDGE, SM_CXEDGE);
			UMBRA_PROPERTY_C(CYEDGE, SM_CYEDGE);
			UMBRA_PROPERTY_C(CXMINSPACING, SM_CXMINSPACING);
			UMBRA_PROPERTY_C(CYMINSPACING, SM_CYMINSPACING);
			UMBRA_PROPERTY_C(CXSMICON, SM_CXSMICON);
			UMBRA_PROPERTY_C(CYSMICON, SM_CYSMICON);
			UMBRA_PROPERTY_C(CYSMCAPTION, SM_CYSMCAPTION);
			UMBRA_PROPERTY_C(CXSMSIZE, SM_CXSMSIZE);
			UMBRA_PROPERTY_C(CYSMSIZE, SM_CYSMSIZE);
			UMBRA_PROPERTY_C(CXMENUSIZE, SM_CXMENUSIZE);
			UMBRA_PROPERTY_C(CYMENUSIZE, SM_CYMENUSIZE);
			UMBRA_PROPERTY_C(ARRANGE, SM_ARRANGE);
			UMBRA_PROPERTY_C(CXMINIMIZED, SM_CXMINIMIZED);
			UMBRA_PROPERTY_C(CYMINIMIZED, SM_CYMINIMIZED);
			UMBRA_PROPERTY_C(CXMAXTRACK, SM_CXMAXTRACK);
			UMBRA_PROPERTY_C(CYMAXTRACK, SM_CYMAXTRACK);
			UMBRA_PROPERTY_C(CXMAXIMIZED, SM_CXMAXIMIZED);
			UMBRA_PROPERTY_C(CYMAXIMIZED, SM_CYMAXIMIZED);
			UMBRA_PROPERTY_C(NETWORK, SM_NETWORK);
			UMBRA_PROPERTY_C(CLEANBOOT, SM_CLEANBOOT);
			UMBRA_PROPERTY_C(CXDRAG, SM_CXDRAG);
			UMBRA_PROPERTY_C(CYDRAG, SM_CYDRAG);
			UMBRA_PROPERTY_C(SHOWSOUNDS, SM_SHOWSOUNDS);
			UMBRA_PROPERTY_C(CXMENUCHECK, SM_CXMENUCHECK);
			UMBRA_PROPERTY_C(CYMENUCHECK, SM_CYMENUCHECK);
			UMBRA_PROPERTY_C(SLOWMACHINE, SM_SLOWMACHINE);
			UMBRA_PROPERTY_C(MIDEASTENABLED, SM_MIDEASTENABLED);
			UMBRA_PROPERTY_C(MOUSEWHEELPRESENT, SM_MOUSEWHEELPRESENT);
			UMBRA_PROPERTY_C(XVIRTUALSCREEN, SM_XVIRTUALSCREEN);
			UMBRA_PROPERTY_C(YVIRTUALSCREEN, SM_YVIRTUALSCREEN);
			UMBRA_PROPERTY_C(CXVIRTUALSCREEN, SM_CXVIRTUALSCREEN);
			UMBRA_PROPERTY_C(CYVIRTUALSCREEN, SM_CYVIRTUALSCREEN);
			UMBRA_PROPERTY_C(CMONITORS, SM_CMONITORS);
			UMBRA_PROPERTY_C(SAMEDISPLAYFORMAT, SM_SAMEDISPLAYFORMAT);
#endif

			// unsupported element
			return Umbra::PropertyRequest::NOT_HANDLED; 
		}
	};

	class ShowWindow : public Umbra::RemoteClass
	{		
	public: // umbra interfaces
		bool doUmbraProperty(Umbra::Variant& V, Umbra::PropertyRequest& R) 
		{ 
#ifdef SW_SHOW
			UMBRA_PROPERTY_C(HIDE, SW_HIDE);
			UMBRA_PROPERTY_C(SHOWNORMAL, SW_SHOWNORMAL);
			UMBRA_PROPERTY_C(NORMAL, SW_NORMAL);
			UMBRA_PROPERTY_C(SHOWMINIMIZED, SW_SHOWMINIMIZED);
			UMBRA_PROPERTY_C(SHOWMAXIMIZED, SW_SHOWMAXIMIZED);
			UMBRA_PROPERTY_C(MAXIMIZE, SW_MAXIMIZE);
			UMBRA_PROPERTY_C(SHOWNOACTIVATE, SW_SHOWNOACTIVATE);
			UMBRA_PROPERTY_C(SHOW, SW_SHOW);
			UMBRA_PROPERTY_C(MINIMIZE, SW_MINIMIZE);
			UMBRA_PROPERTY_C(SHOWMINNOACTIVE, SW_SHOWMINNOACTIVE);
			UMBRA_PROPERTY_C(SHOWNA, SW_SHOWNA);
			UMBRA_PROPERTY_C(RESTORE, SW_RESTORE);
			UMBRA_PROPERTY_C(SHOWDEFAULT, SW_SHOWDEFAULT);
			UMBRA_PROPERTY_C(FORCEMINIMIZE, SW_FORCEMINIMIZE);
			UMBRA_PROPERTY_C(MAX, SW_MAX);
#endif
			// unsupported element
			return Umbra::PropertyRequest::NOT_HANDLED; 
		}
	};

	class Gwl : public Umbra::RemoteClass
	{		
	public: // umbra interfaces
		bool doUmbraProperty(Umbra::Variant& V, Umbra::PropertyRequest& R) 
		{ 
#ifdef GWL_WNDPROC
			UMBRA_PROPERTY_C(WNDPROC, GWL_WNDPROC);
			UMBRA_PROPERTY_C(HINSTANCE, GWL_HINSTANCE);
			UMBRA_PROPERTY_C(HWNDPARENT, GWL_HWNDPARENT);
			UMBRA_PROPERTY_C(STYLE, GWL_STYLE);
			UMBRA_PROPERTY_C(EXSTYLE, GWL_EXSTYLE);
			UMBRA_PROPERTY_C(USERDATA, GWL_USERDATA);
			UMBRA_PROPERTY_C(ID, GWL_ID);
#endif
			// unsupported element
			return Umbra::PropertyRequest::NOT_HANDLED; 
		}
	};

	class Messages : public Umbra::RemoteClass
	{		
	public: // umbra interfaces
		bool doUmbraProperty(Umbra::Variant& V, Umbra::PropertyRequest& R) 
		{ 
#ifdef WM_NULL
			UMBRA_PROPERTY_C(NULL, WM_NULL);
			UMBRA_PROPERTY_C(CREATE, WM_CREATE);
			UMBRA_PROPERTY_C(DESTROY, WM_DESTROY);
			UMBRA_PROPERTY_C(MOVE, WM_MOVE);
			UMBRA_PROPERTY_C(SIZE, WM_SIZE);
			UMBRA_PROPERTY_C(ACTIVATE, WM_ACTIVATE);
			UMBRA_PROPERTY_C(SETFOCUS, WM_SETFOCUS);
			UMBRA_PROPERTY_C(KILLFOCUS, WM_KILLFOCUS);
			UMBRA_PROPERTY_C(ENABLE, WM_ENABLE);
			UMBRA_PROPERTY_C(SETREDRAW, WM_SETREDRAW);
			UMBRA_PROPERTY_C(SETTEXT, WM_SETTEXT);
			UMBRA_PROPERTY_C(GETTEXT, WM_GETTEXT);
			UMBRA_PROPERTY_C(GETTEXTLENGTH, WM_GETTEXTLENGTH);
			UMBRA_PROPERTY_C(PAINT, WM_PAINT);
			UMBRA_PROPERTY_C(CLOSE, WM_CLOSE);
			UMBRA_PROPERTY_C(QUERYENDSESSION, WM_QUERYENDSESSION);
			UMBRA_PROPERTY_C(QUERYOPEN, WM_QUERYOPEN);
			UMBRA_PROPERTY_C(ENDSESSION, WM_ENDSESSION);
			UMBRA_PROPERTY_C(QUIT, WM_QUIT);
			UMBRA_PROPERTY_C(ERASEBKGND, WM_ERASEBKGND);
			UMBRA_PROPERTY_C(SYSCOLORCHANGE, WM_SYSCOLORCHANGE);
			UMBRA_PROPERTY_C(SHOWWINDOW, WM_SHOWWINDOW);
			UMBRA_PROPERTY_C(WININICHANGE, WM_WININICHANGE);
			UMBRA_PROPERTY_C(SETTINGCHANGE, WM_SETTINGCHANGE);
			UMBRA_PROPERTY_C(DEVMODECHANGE, WM_DEVMODECHANGE);
			UMBRA_PROPERTY_C(ACTIVATEAPP, WM_ACTIVATEAPP);
			UMBRA_PROPERTY_C(FONTCHANGE, WM_FONTCHANGE);
			UMBRA_PROPERTY_C(TIMECHANGE, WM_TIMECHANGE);
			UMBRA_PROPERTY_C(CANCELMODE, WM_CANCELMODE);
			UMBRA_PROPERTY_C(SETCURSOR, WM_SETCURSOR);
			UMBRA_PROPERTY_C(MOUSEACTIVATE, WM_MOUSEACTIVATE);
			UMBRA_PROPERTY_C(CHILDACTIVATE, WM_CHILDACTIVATE);
			UMBRA_PROPERTY_C(QUEUESYNC, WM_QUEUESYNC);
			UMBRA_PROPERTY_C(GETMINMAXINFO, WM_GETMINMAXINFO);
			UMBRA_PROPERTY_C(PAINTICON, WM_PAINTICON);
			UMBRA_PROPERTY_C(ICONERASEBKGND, WM_ICONERASEBKGND);
			UMBRA_PROPERTY_C(NEXTDLGCTL, WM_NEXTDLGCTL);
			UMBRA_PROPERTY_C(SPOOLERSTATUS, WM_SPOOLERSTATUS);
			UMBRA_PROPERTY_C(DRAWITEM, WM_DRAWITEM);
			UMBRA_PROPERTY_C(MEASUREITEM, WM_MEASUREITEM);
			UMBRA_PROPERTY_C(DELETEITEM, WM_DELETEITEM);
			UMBRA_PROPERTY_C(VKEYTOITEM, WM_VKEYTOITEM);
			UMBRA_PROPERTY_C(CHARTOITEM, WM_CHARTOITEM);
			UMBRA_PROPERTY_C(SETFONT, WM_SETFONT);
			UMBRA_PROPERTY_C(GETFONT, WM_GETFONT);
			UMBRA_PROPERTY_C(SETHOTKEY, WM_SETHOTKEY);
			UMBRA_PROPERTY_C(GETHOTKEY, WM_GETHOTKEY);
			UMBRA_PROPERTY_C(QUERYDRAGICON, WM_QUERYDRAGICON);
			UMBRA_PROPERTY_C(COMPAREITEM, WM_COMPAREITEM);
			UMBRA_PROPERTY_C(GETOBJECT, WM_GETOBJECT);
			UMBRA_PROPERTY_C(COMPACTING, WM_COMPACTING);
			UMBRA_PROPERTY_C(COMMNOTIFY, WM_COMMNOTIFY);
			UMBRA_PROPERTY_C(WINDOWPOSCHANGING, WM_WINDOWPOSCHANGING);
			UMBRA_PROPERTY_C(WINDOWPOSCHANGED, WM_WINDOWPOSCHANGED);
			UMBRA_PROPERTY_C(POWER, WM_POWER);
			UMBRA_PROPERTY_C(PWR_OK, PWR_OK);
			UMBRA_PROPERTY_C(PWR_FAIL, PWR_FAIL);
			UMBRA_PROPERTY_C(PWR_SUSPENDREQUEST, PWR_SUSPENDREQUEST);
			UMBRA_PROPERTY_C(PWR_SUSPENDRESUME, PWR_SUSPENDRESUME);
			UMBRA_PROPERTY_C(PWR_CRITICALRESUME, PWR_CRITICALRESUME);
			UMBRA_PROPERTY_C(COPYDATA, WM_COPYDATA);
			UMBRA_PROPERTY_C(CANCELJOURNAL, WM_CANCELJOURNAL);
			UMBRA_PROPERTY_C(NOTIFY, WM_NOTIFY);
			UMBRA_PROPERTY_C(INPUTLANGCHANGEREQUEST, WM_INPUTLANGCHANGEREQUEST);
			UMBRA_PROPERTY_C(INPUTLANGCHANGE, WM_INPUTLANGCHANGE);
			UMBRA_PROPERTY_C(TCARD, WM_TCARD);
			UMBRA_PROPERTY_C(HELP, WM_HELP);
			UMBRA_PROPERTY_C(USERCHANGED, WM_USERCHANGED);
			UMBRA_PROPERTY_C(NOTIFYFORMAT, WM_NOTIFYFORMAT);
			UMBRA_PROPERTY_C(NFR_ANSI, NFR_ANSI);
			UMBRA_PROPERTY_C(NFR_UNICODE, NFR_UNICODE);
			UMBRA_PROPERTY_C(NF_QUERY, NF_QUERY);
			UMBRA_PROPERTY_C(NF_REQUERY, NF_REQUERY);
			UMBRA_PROPERTY_C(CONTEXTMENU, WM_CONTEXTMENU);
			UMBRA_PROPERTY_C(STYLECHANGING, WM_STYLECHANGING);
			UMBRA_PROPERTY_C(STYLECHANGED, WM_STYLECHANGED);
			UMBRA_PROPERTY_C(DISPLAYCHANGE, WM_DISPLAYCHANGE);
			UMBRA_PROPERTY_C(GETICON, WM_GETICON);
			UMBRA_PROPERTY_C(SETICON, WM_SETICON);
			UMBRA_PROPERTY_C(NCCREATE, WM_NCCREATE);
			UMBRA_PROPERTY_C(NCDESTROY, WM_NCDESTROY);
			UMBRA_PROPERTY_C(NCCALCSIZE, WM_NCCALCSIZE);
			UMBRA_PROPERTY_C(NCHITTEST, WM_NCHITTEST);
			UMBRA_PROPERTY_C(NCPAINT, WM_NCPAINT);
			UMBRA_PROPERTY_C(NCACTIVATE, WM_NCACTIVATE);
			UMBRA_PROPERTY_C(GETDLGCODE, WM_GETDLGCODE);
			UMBRA_PROPERTY_C(SYNCPAINT, WM_SYNCPAINT);
			UMBRA_PROPERTY_C(NCMOUSEMOVE, WM_NCMOUSEMOVE);
			UMBRA_PROPERTY_C(NCLBUTTONDOWN, WM_NCLBUTTONDOWN);
			UMBRA_PROPERTY_C(NCLBUTTONUP, WM_NCLBUTTONUP);
			UMBRA_PROPERTY_C(NCLBUTTONDBLCLK, WM_NCLBUTTONDBLCLK);
			UMBRA_PROPERTY_C(NCRBUTTONDOWN, WM_NCRBUTTONDOWN);
			UMBRA_PROPERTY_C(NCRBUTTONUP, WM_NCRBUTTONUP);
			UMBRA_PROPERTY_C(NCRBUTTONDBLCLK, WM_NCRBUTTONDBLCLK);
			UMBRA_PROPERTY_C(NCMBUTTONDOWN, WM_NCMBUTTONDOWN);
			UMBRA_PROPERTY_C(NCMBUTTONUP, WM_NCMBUTTONUP);
			UMBRA_PROPERTY_C(NCMBUTTONDBLCLK, WM_NCMBUTTONDBLCLK);
			UMBRA_PROPERTY_C(NCXBUTTONDOWN, WM_NCXBUTTONDOWN);
			UMBRA_PROPERTY_C(NCXBUTTONUP, WM_NCXBUTTONUP);
			UMBRA_PROPERTY_C(NCXBUTTONDBLCLK, WM_NCXBUTTONDBLCLK);
			UMBRA_PROPERTY_C(INPUT_DEVICE_CHANGE, WM_INPUT_DEVICE_CHANGE);
			UMBRA_PROPERTY_C(INPUT, WM_INPUT);
			UMBRA_PROPERTY_C(KEYFIRST, WM_KEYFIRST);
			UMBRA_PROPERTY_C(KEYDOWN, WM_KEYDOWN);
			UMBRA_PROPERTY_C(KEYUP, WM_KEYUP);
			UMBRA_PROPERTY_C(CHAR, WM_CHAR);
			UMBRA_PROPERTY_C(DEADCHAR, WM_DEADCHAR);
			UMBRA_PROPERTY_C(SYSKEYDOWN, WM_SYSKEYDOWN);
			UMBRA_PROPERTY_C(SYSKEYUP, WM_SYSKEYUP);
			UMBRA_PROPERTY_C(SYSCHAR, WM_SYSCHAR);
			UMBRA_PROPERTY_C(SYSDEADCHAR, WM_SYSDEADCHAR);
			UMBRA_PROPERTY_C(UNICHAR, WM_UNICHAR);
			UMBRA_PROPERTY_C(KEYLAST, WM_KEYLAST);
			UMBRA_PROPERTY_C(UNICODE_NOCHAR, UNICODE_NOCHAR);
			UMBRA_PROPERTY_C(KEYLAST, WM_KEYLAST);
			UMBRA_PROPERTY_C(IME_STARTCOMPOSITION, WM_IME_STARTCOMPOSITION);
			UMBRA_PROPERTY_C(IME_ENDCOMPOSITION, WM_IME_ENDCOMPOSITION);
			UMBRA_PROPERTY_C(IME_COMPOSITION, WM_IME_COMPOSITION);
			UMBRA_PROPERTY_C(IME_KEYLAST, WM_IME_KEYLAST);
			UMBRA_PROPERTY_C(INITDIALOG, WM_INITDIALOG);
			UMBRA_PROPERTY_C(COMMAND, WM_COMMAND);
			UMBRA_PROPERTY_C(SYSCOMMAND, WM_SYSCOMMAND);
			UMBRA_PROPERTY_C(TIMER, WM_TIMER);
			UMBRA_PROPERTY_C(HSCROLL, WM_HSCROLL);
			UMBRA_PROPERTY_C(VSCROLL, WM_VSCROLL);
			UMBRA_PROPERTY_C(INITMENU, WM_INITMENU);
			UMBRA_PROPERTY_C(INITMENUPOPUP, WM_INITMENUPOPUP);
			UMBRA_PROPERTY_C(MENUSELECT, WM_MENUSELECT);
			UMBRA_PROPERTY_C(MENUCHAR, WM_MENUCHAR);
			UMBRA_PROPERTY_C(ENTERIDLE, WM_ENTERIDLE);
			UMBRA_PROPERTY_C(MENURBUTTONUP, WM_MENURBUTTONUP);
			UMBRA_PROPERTY_C(MENUDRAG, WM_MENUDRAG);
			UMBRA_PROPERTY_C(MENUGETOBJECT, WM_MENUGETOBJECT);
			UMBRA_PROPERTY_C(UNINITMENUPOPUP, WM_UNINITMENUPOPUP);
			UMBRA_PROPERTY_C(MENUCOMMAND, WM_MENUCOMMAND);
			UMBRA_PROPERTY_C(CHANGEUISTATE, WM_CHANGEUISTATE);
			UMBRA_PROPERTY_C(UPDATEUISTATE, WM_UPDATEUISTATE);
			UMBRA_PROPERTY_C(QUERYUISTATE, WM_QUERYUISTATE);
			UMBRA_PROPERTY_C(UIS_SET, UIS_SET);
			UMBRA_PROPERTY_C(UIS_CLEAR, UIS_CLEAR);
			UMBRA_PROPERTY_C(UIS_INITIALIZE, UIS_INITIALIZE);
			UMBRA_PROPERTY_C(UISF_HIDEFOCUS, UISF_HIDEFOCUS);
			UMBRA_PROPERTY_C(UISF_HIDEACCEL, UISF_HIDEACCEL);
			UMBRA_PROPERTY_C(UISF_ACTIVE, UISF_ACTIVE);
			UMBRA_PROPERTY_C(CTLCOLORMSGBOX, WM_CTLCOLORMSGBOX);
			UMBRA_PROPERTY_C(CTLCOLOREDIT, WM_CTLCOLOREDIT);
			UMBRA_PROPERTY_C(CTLCOLORLISTBOX, WM_CTLCOLORLISTBOX);
			UMBRA_PROPERTY_C(CTLCOLORBTN, WM_CTLCOLORBTN);
			UMBRA_PROPERTY_C(CTLCOLORDLG, WM_CTLCOLORDLG);
			UMBRA_PROPERTY_C(CTLCOLORSCROLLBAR, WM_CTLCOLORSCROLLBAR);
			UMBRA_PROPERTY_C(CTLCOLORSTATIC, WM_CTLCOLORSTATIC);
			UMBRA_PROPERTY_C(MN_GETHMENU, MN_GETHMENU);
			UMBRA_PROPERTY_C(MOUSEFIRST, WM_MOUSEFIRST);
			UMBRA_PROPERTY_C(MOUSEMOVE, WM_MOUSEMOVE);
			UMBRA_PROPERTY_C(LBUTTONDOWN, WM_LBUTTONDOWN);
			UMBRA_PROPERTY_C(LBUTTONUP, WM_LBUTTONUP);
			UMBRA_PROPERTY_C(LBUTTONDBLCLK, WM_LBUTTONDBLCLK);
			UMBRA_PROPERTY_C(RBUTTONDOWN, WM_RBUTTONDOWN);
			UMBRA_PROPERTY_C(RBUTTONUP, WM_RBUTTONUP);
			UMBRA_PROPERTY_C(RBUTTONDBLCLK, WM_RBUTTONDBLCLK);
			UMBRA_PROPERTY_C(MBUTTONDOWN, WM_MBUTTONDOWN);
			UMBRA_PROPERTY_C(MBUTTONUP, WM_MBUTTONUP);
			UMBRA_PROPERTY_C(MBUTTONDBLCLK, WM_MBUTTONDBLCLK);
			UMBRA_PROPERTY_C(MOUSEWHEEL, WM_MOUSEWHEEL);
			UMBRA_PROPERTY_C(XBUTTONDOWN, WM_XBUTTONDOWN);
			UMBRA_PROPERTY_C(XBUTTONUP, WM_XBUTTONUP);
			UMBRA_PROPERTY_C(XBUTTONDBLCLK, WM_XBUTTONDBLCLK);
			UMBRA_PROPERTY_C(MOUSELAST, WM_MOUSELAST);
			UMBRA_PROPERTY_C(MOUSELAST, WM_MOUSELAST);
			UMBRA_PROPERTY_C(MOUSELAST, WM_MOUSELAST);
			UMBRA_PROPERTY_C(MOUSELAST, WM_MOUSELAST);
			UMBRA_PROPERTY_C(WHEEL_DELTA, WHEEL_DELTA);
			UMBRA_PROPERTY_C(XBUTTON1, XBUTTON1);
			UMBRA_PROPERTY_C(XBUTTON2, XBUTTON2);
			UMBRA_PROPERTY_C(PARENTNOTIFY, WM_PARENTNOTIFY);
			UMBRA_PROPERTY_C(ENTERMENULOOP, WM_ENTERMENULOOP);
			UMBRA_PROPERTY_C(EXITMENULOOP, WM_EXITMENULOOP);
			UMBRA_PROPERTY_C(NEXTMENU, WM_NEXTMENU);
			UMBRA_PROPERTY_C(SIZING, WM_SIZING);
			UMBRA_PROPERTY_C(CAPTURECHANGED, WM_CAPTURECHANGED);
			UMBRA_PROPERTY_C(MOVING, WM_MOVING);
			UMBRA_PROPERTY_C(POWERBROADCAST, WM_POWERBROADCAST);
			UMBRA_PROPERTY_C(PBT_APMQUERYSUSPEND, PBT_APMQUERYSUSPEND);
			UMBRA_PROPERTY_C(PBT_APMQUERYSTANDBY, PBT_APMQUERYSTANDBY);
			UMBRA_PROPERTY_C(PBT_APMQUERYSUSPENDFAILED, PBT_APMQUERYSUSPENDFAILED);
			UMBRA_PROPERTY_C(PBT_APMQUERYSTANDBYFAILED, PBT_APMQUERYSTANDBYFAILED);
			UMBRA_PROPERTY_C(PBT_APMSUSPEND, PBT_APMSUSPEND);
			UMBRA_PROPERTY_C(PBT_APMSTANDBY, PBT_APMSTANDBY);
			UMBRA_PROPERTY_C(PBT_APMRESUMECRITICAL, PBT_APMRESUMECRITICAL);
			UMBRA_PROPERTY_C(PBT_APMRESUMESUSPEND, PBT_APMRESUMESUSPEND);
			UMBRA_PROPERTY_C(PBT_APMRESUMESTANDBY, PBT_APMRESUMESTANDBY);
			UMBRA_PROPERTY_C(PBTF_APMRESUMEFROMFAILURE, PBTF_APMRESUMEFROMFAILURE);
			UMBRA_PROPERTY_C(PBT_APMBATTERYLOW, PBT_APMBATTERYLOW);
			UMBRA_PROPERTY_C(PBT_APMPOWERSTATUSCHANGE, PBT_APMPOWERSTATUSCHANGE);
			UMBRA_PROPERTY_C(PBT_APMOEMEVENT, PBT_APMOEMEVENT);
			UMBRA_PROPERTY_C(PBT_APMRESUMEAUTOMATIC, PBT_APMRESUMEAUTOMATIC);
			UMBRA_PROPERTY_C(DEVICECHANGE, WM_DEVICECHANGE);
			UMBRA_PROPERTY_C(MDICREATE, WM_MDICREATE);
			UMBRA_PROPERTY_C(MDIDESTROY, WM_MDIDESTROY);
			UMBRA_PROPERTY_C(MDIACTIVATE, WM_MDIACTIVATE);
			UMBRA_PROPERTY_C(MDIRESTORE, WM_MDIRESTORE);
			UMBRA_PROPERTY_C(MDINEXT, WM_MDINEXT);
			UMBRA_PROPERTY_C(MDIMAXIMIZE, WM_MDIMAXIMIZE);
			UMBRA_PROPERTY_C(MDITILE, WM_MDITILE);
			UMBRA_PROPERTY_C(MDICASCADE, WM_MDICASCADE);
			UMBRA_PROPERTY_C(MDIICONARRANGE, WM_MDIICONARRANGE);
			UMBRA_PROPERTY_C(MDIGETACTIVE, WM_MDIGETACTIVE);
			UMBRA_PROPERTY_C(MDISETMENU, WM_MDISETMENU);
			UMBRA_PROPERTY_C(ENTERSIZEMOVE, WM_ENTERSIZEMOVE);
			UMBRA_PROPERTY_C(EXITSIZEMOVE, WM_EXITSIZEMOVE);
			UMBRA_PROPERTY_C(DROPFILES, WM_DROPFILES);
			UMBRA_PROPERTY_C(MDIREFRESHMENU, WM_MDIREFRESHMENU);
			UMBRA_PROPERTY_C(IME_SETCONTEXT, WM_IME_SETCONTEXT);
			UMBRA_PROPERTY_C(IME_NOTIFY, WM_IME_NOTIFY);
			UMBRA_PROPERTY_C(IME_CONTROL, WM_IME_CONTROL);
			UMBRA_PROPERTY_C(IME_COMPOSITIONFULL, WM_IME_COMPOSITIONFULL);
			UMBRA_PROPERTY_C(IME_SELECT, WM_IME_SELECT);
			UMBRA_PROPERTY_C(IME_CHAR, WM_IME_CHAR);
			UMBRA_PROPERTY_C(IME_REQUEST, WM_IME_REQUEST);
			UMBRA_PROPERTY_C(IME_KEYDOWN, WM_IME_KEYDOWN);
			UMBRA_PROPERTY_C(IME_KEYUP, WM_IME_KEYUP);
			UMBRA_PROPERTY_C(MOUSEHOVER, WM_MOUSEHOVER);
			UMBRA_PROPERTY_C(MOUSELEAVE, WM_MOUSELEAVE);
			UMBRA_PROPERTY_C(NCMOUSEHOVER, WM_NCMOUSEHOVER);
			UMBRA_PROPERTY_C(NCMOUSELEAVE, WM_NCMOUSELEAVE);
			UMBRA_PROPERTY_C(WTSSESSION_CHANGE, WM_WTSSESSION_CHANGE);
			UMBRA_PROPERTY_C(TABLET_FIRST, WM_TABLET_FIRST);
			UMBRA_PROPERTY_C(TABLET_LAST, WM_TABLET_LAST);
			UMBRA_PROPERTY_C(CUT, WM_CUT);
			UMBRA_PROPERTY_C(COPY, WM_COPY);
			UMBRA_PROPERTY_C(PASTE, WM_PASTE);
			UMBRA_PROPERTY_C(CLEAR, WM_CLEAR);
			UMBRA_PROPERTY_C(UNDO, WM_UNDO);
			UMBRA_PROPERTY_C(RENDERFORMAT, WM_RENDERFORMAT);
			UMBRA_PROPERTY_C(RENDERALLFORMATS, WM_RENDERALLFORMATS);
			UMBRA_PROPERTY_C(DESTROYCLIPBOARD, WM_DESTROYCLIPBOARD);
			UMBRA_PROPERTY_C(DRAWCLIPBOARD, WM_DRAWCLIPBOARD);
			UMBRA_PROPERTY_C(PAINTCLIPBOARD, WM_PAINTCLIPBOARD);
			UMBRA_PROPERTY_C(VSCROLLCLIPBOARD, WM_VSCROLLCLIPBOARD);
			UMBRA_PROPERTY_C(SIZECLIPBOARD, WM_SIZECLIPBOARD);
			UMBRA_PROPERTY_C(ASKCBFORMATNAME, WM_ASKCBFORMATNAME);
			UMBRA_PROPERTY_C(CHANGECBCHAIN, WM_CHANGECBCHAIN);
			UMBRA_PROPERTY_C(HSCROLLCLIPBOARD, WM_HSCROLLCLIPBOARD);
			UMBRA_PROPERTY_C(QUERYNEWPALETTE, WM_QUERYNEWPALETTE);
			UMBRA_PROPERTY_C(PALETTEISCHANGING, WM_PALETTEISCHANGING);
			UMBRA_PROPERTY_C(PALETTECHANGED, WM_PALETTECHANGED);
			UMBRA_PROPERTY_C(HOTKEY, WM_HOTKEY);
			UMBRA_PROPERTY_C(PRINT, WM_PRINT);
			UMBRA_PROPERTY_C(PRINTCLIENT, WM_PRINTCLIENT);
			UMBRA_PROPERTY_C(APPCOMMAND, WM_APPCOMMAND);
			UMBRA_PROPERTY_C(THEMECHANGED, WM_THEMECHANGED);
			UMBRA_PROPERTY_C(CLIPBOARDUPDATE, WM_CLIPBOARDUPDATE);
			UMBRA_PROPERTY_C(HANDHELDFIRST, WM_HANDHELDFIRST);
			UMBRA_PROPERTY_C(HANDHELDLAST, WM_HANDHELDLAST);
			UMBRA_PROPERTY_C(AFXFIRST, WM_AFXFIRST);
			UMBRA_PROPERTY_C(AFXLAST, WM_AFXLAST);
			UMBRA_PROPERTY_C(PENWINFIRST, WM_PENWINFIRST);
			UMBRA_PROPERTY_C(PENWINLAST, WM_PENWINLAST);
#endif

			// unsupported element
			return Umbra::PropertyRequest::NOT_HANDLED; 
		}
	};

	class WindowStyles : public Umbra::RemoteClass
	{		
	public: // umbra interfaces
		bool doUmbraProperty(Umbra::Variant& V, Umbra::PropertyRequest& R) 
		{ 
#ifdef WS_POPUP
			UMBRA_PROPERTY_C(POPUP, (int)WS_POPUP);
			UMBRA_PROPERTY_C(CHILD, WS_CHILD);
			UMBRA_PROPERTY_C(MINIMIZE, WS_MINIMIZE);
			UMBRA_PROPERTY_C(VISIBLE, WS_VISIBLE);
			UMBRA_PROPERTY_C(DISABLED, WS_DISABLED);
			UMBRA_PROPERTY_C(CLIPSIBLINGS, WS_CLIPSIBLINGS);
			UMBRA_PROPERTY_C(CLIPCHILDREN, WS_CLIPCHILDREN);
			UMBRA_PROPERTY_C(MAXIMIZE, WS_MAXIMIZE);
			UMBRA_PROPERTY_C(CAPTION, WS_CAPTION);
			UMBRA_PROPERTY_C(BORDER, WS_BORDER);
			UMBRA_PROPERTY_C(DLGFRAME, WS_DLGFRAME);
			UMBRA_PROPERTY_C(VSCROLL, WS_VSCROLL);
			UMBRA_PROPERTY_C(HSCROLL, WS_HSCROLL);
			UMBRA_PROPERTY_C(SYSMENU, WS_SYSMENU);
			UMBRA_PROPERTY_C(THICKFRAME, WS_THICKFRAME);
			UMBRA_PROPERTY_C(GROUP, WS_GROUP);
			UMBRA_PROPERTY_C(TABSTOP, WS_TABSTOP);
			UMBRA_PROPERTY_C(MINIMIZEBOX, WS_MINIMIZEBOX);
			UMBRA_PROPERTY_C(MAXIMIZEBOX, WS_MAXIMIZEBOX);
			UMBRA_PROPERTY_C(TILED, WS_TILED);
			UMBRA_PROPERTY_C(ICONIC, WS_ICONIC);
			UMBRA_PROPERTY_C(SIZEBOX, WS_SIZEBOX);
			UMBRA_PROPERTY_C(TILEDWINDOW, WS_TILEDWINDOW);
			UMBRA_PROPERTY_C(OVERLAPPEDWINDOW, WS_OVERLAPPEDWINDOW);
			UMBRA_PROPERTY_C(POPUPWINDOW, (int)WS_POPUPWINDOW);
			UMBRA_PROPERTY_C(CHILDWINDOW, WS_CHILDWINDOW);
			UMBRA_PROPERTY_C(EX_DLGMODALFRAME, WS_EX_DLGMODALFRAME);
			UMBRA_PROPERTY_C(EX_NOPARENTNOTIFY, WS_EX_NOPARENTNOTIFY);
			UMBRA_PROPERTY_C(EX_TOPMOST, WS_EX_TOPMOST);
			UMBRA_PROPERTY_C(EX_ACCEPTFILES, WS_EX_ACCEPTFILES);
			UMBRA_PROPERTY_C(EX_TRANSPARENT, WS_EX_TRANSPARENT);
			UMBRA_PROPERTY_C(EX_MDICHILD, WS_EX_MDICHILD);
			UMBRA_PROPERTY_C(EX_TOOLWINDOW, WS_EX_TOOLWINDOW);
			UMBRA_PROPERTY_C(EX_WINDOWEDGE, WS_EX_WINDOWEDGE);
			UMBRA_PROPERTY_C(EX_CLIENTEDGE, WS_EX_CLIENTEDGE);
			UMBRA_PROPERTY_C(EX_CONTEXTHELP, WS_EX_CONTEXTHELP);
			UMBRA_PROPERTY_C(EX_RIGHT, WS_EX_RIGHT);
			UMBRA_PROPERTY_C(EX_LEFT, WS_EX_LEFT);
			UMBRA_PROPERTY_C(EX_RTLREADING, WS_EX_RTLREADING);
			UMBRA_PROPERTY_C(EX_LTRREADING, WS_EX_LTRREADING);
			UMBRA_PROPERTY_C(EX_LEFTSCROLLBAR, WS_EX_LEFTSCROLLBAR);
			UMBRA_PROPERTY_C(EX_RIGHTSCROLLBAR, WS_EX_RIGHTSCROLLBAR);
			UMBRA_PROPERTY_C(EX_CONTROLPARENT, WS_EX_CONTROLPARENT);
			UMBRA_PROPERTY_C(EX_STATICEDGE, WS_EX_STATICEDGE);
			UMBRA_PROPERTY_C(EX_APPWINDOW, WS_EX_APPWINDOW);
			UMBRA_PROPERTY_C(EX_OVERLAPPEDWINDOW, WS_EX_OVERLAPPEDWINDOW);
			UMBRA_PROPERTY_C(EX_PALETTEWINDOW, WS_EX_PALETTEWINDOW);
#endif
			// unsupported element
			return Umbra::PropertyRequest::NOT_HANDLED; 
		}
	};

	//
	// Win32.Gdi
	//

	class NamespaceDef : public Umbra::RemoteClass
	{
	private: // classes
		MessageBox		_mbox;
		VirtualKeys		_vk;
		SystemMetrics	_systemMetrics;
		ShowWindow		_showWindow;
		Gwl						_gwl;
		Messages			_messages;
		WindowStyles	_windowStyles;

	public: // access
		bool doUmbraProperty(Umbra::Variant& V, Umbra::PropertyRequest& R) 
		{
			UMBRA_PROPERTY_C(MessageBox, _mbox);
			UMBRA_PROPERTY_C(VirtualKeys, _vk);
			UMBRA_PROPERTY_C(SystemMetrics, _systemMetrics);
			UMBRA_PROPERTY_C(ShowWindow, _showWindow);
			UMBRA_PROPERTY_C(Gwl, _gwl);
			UMBRA_PROPERTY_C(Messages, _messages);
			UMBRA_PROPERTY_C(WindowStyles, _windowStyles);

			// unsupported element
			return Umbra::PropertyRequest::NOT_HANDLED; 
		}

	public: // static instance
		static NamespaceDef& getInst() { static NamespaceDef ns; return ns; }
	};

} } }